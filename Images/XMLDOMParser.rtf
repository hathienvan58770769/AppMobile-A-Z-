{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue109;\red109\green109\blue109;\red15\green112\blue3;
\red0\green0\blue254;\red82\green0\blue103;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c42745;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c5882\c43922\c1176;
\csgenericrgb\c0\c0\c99608;\csgenericrgb\c32157\c0\c40392;}
\paperw11900\paperh16840\vieww12000\viewh13160\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs26 \cf2 import 
\f1\b0 \cf0 java.io.IOException;\

\f0\b \cf2 import 
\f1\b0 \cf0 java.io.StringReader;\
\

\f0\b \cf2 import 
\f1\b0 \cf0 javax.xml.parsers.DocumentBuilder;\

\f0\b \cf2 import 
\f1\b0 \cf0 javax.xml.parsers.DocumentBuilderFactory;\

\f0\b \cf2 import 
\f1\b0 \cf0 javax.xml.parsers.ParserConfigurationException;\

\f0\b \cf2 import 
\f1\b0 \cf0 org.w3c.dom.Document;\

\f0\b \cf2 import 
\f1\b0 \cf0 org.w3c.dom.Element;\

\f0\b \cf2 import 
\f1\b0 \cf0 org.w3c.dom.Node;\

\f0\b \cf2 import 
\f1\b0 \cf0 org.w3c.dom.NodeList;\

\f0\b \cf2 import 
\f1\b0 \cf0 org.xml.sax.InputSource;\

\f0\b \cf2 import 
\f1\b0 \cf0 org.xml.sax.SAXException;\

\f0\b \cf2 import 
\f1\b0 \cf0 android.util.Log;\
\

\f0\b \cf2 public class 
\f1\b0 \cf0 XMLDOMParser \{\
    
\f2\i \cf3 //Returns the entire XML document\
    
\f0\i0\b \cf2 public 
\f1\b0 \cf0 Document getDocument(String xml) \{\
        Document document = 
\f0\b \cf2 null
\f1\b0 \cf0 ;\
        DocumentBuilderFactory factory = DocumentBuilderFactory.
\f2\i newInstance
\f1\i0 ();\
        
\f0\b \cf2 try 
\f1\b0 \cf0 \{\
            DocumentBuilder db = factory.newDocumentBuilder();\
            InputSource inputSource = 
\f0\b \cf2 new 
\f1\b0 \cf0 InputSource();\
            inputSource.setCharacterStream(
\f0\b \cf2 new 
\f1\b0 \cf0 StringReader(xml));\
            inputSource.setEncoding(
\f0\b \cf4 "UTF-8"
\f1\b0 \cf0 );\
\
            document = db.parse(inputSource);\
        \} 
\f0\b \cf2 catch 
\f1\b0 \cf0 (ParserConfigurationException e) \{\
            Log.
\f2\i e
\f1\i0 (
\f0\b \cf4 "Error: "
\f1\b0 \cf0 , e.getMessage(), e);\
            
\f0\b \cf2 return null
\f1\b0 \cf0 ;\
        \} 
\f0\b \cf2 catch 
\f1\b0 \cf0 (SAXException e) \{\
            Log.
\f2\i e
\f1\i0 (
\f0\b \cf4 "Error: "
\f1\b0 \cf0 , e.getMessage(), e);\
            
\f0\b \cf2 return null
\f1\b0 \cf0 ;\
        \} 
\f0\b \cf2 catch 
\f1\b0 \cf0 (IOException e) \{\
            Log.
\f2\i e
\f1\i0 (
\f0\b \cf4 "Error: "
\f1\b0 \cf0 , e.getMessage(), e);\
            
\f0\b \cf2 return null
\f1\b0 \cf0 ;\
        \}\
        
\f0\b \cf2 return 
\f1\b0 \cf0 document;\
    \}\
\
    
\f0\b \cf2 public 
\f1\b0 \cf0 String getValue(Element item, String name) \{\
        NodeList nodes = item.getElementsByTagName(name);\
        
\f0\b \cf2 return this
\f1\b0 \cf0 .getTextNodeValue(nodes.item(\cf5 0\cf0 ));\
    \}\
\
    
\f0\b \cf2 private final 
\f1\b0 \cf0 String getTextNodeValue(Node node) \{\
        Node child;\
        
\f0\b \cf2 if 
\f1\b0 \cf0 (node != 
\f0\b \cf2 null
\f1\b0 \cf0 ) \{\
            
\f0\b \cf2 if 
\f1\b0 \cf0 (node.hasChildNodes()) \{\
\
                
\f0\b \cf2 for
\f1\b0 \cf0 (child = node.getFirstChild(); child != 
\f0\b \cf2 null
\f1\b0 \cf0 ; child = child.getNextSibling()) \{\
                    
\f0\b \cf2 if 
\f1\b0 \cf0 (child.getNodeType() == Node.
\f3\i\b \cf6 TEXT_NODE
\f1\i0\b0 \cf0 ) \{\
                        
\f0\b \cf2 return 
\f1\b0 \cf0 child.getNodeValue();\
                    \}\
                \}\
            \}\
        \}\
        
\f0\b \cf2 return \cf4 ""
\f1\b0 \cf0 ;\
    \}\
\}\
}